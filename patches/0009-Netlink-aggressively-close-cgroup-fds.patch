From 6f1b4bb4dfedebbe10b1b59bc63b311790bd7149 Mon Sep 17 00:00:00 2001
From: Thomas Orozco <thomas@orozco.fr>
Date: Tue, 5 Apr 2016 14:23:57 +0200
Subject: [PATCH] Netlink: aggressively close cgroup fds

Since we're using a shorter, fixed housekeeping interval for the CPU
load reader, we might end up accumulating a lot of open FDs and we can't
simply rely on the GC to garbage collect them.
---
 utils/cpuload/netlink/reader.go | 1 +
 1 file changed, 1 insertion(+)

diff --git a/utils/cpuload/netlink/reader.go b/utils/cpuload/netlink/reader.go
index 4e3aa68..d38543b 100644
--- a/utils/cpuload/netlink/reader.go
+++ b/utils/cpuload/netlink/reader.go
@@ -66,6 +66,7 @@ func (self *NetlinkReader) GetCpuLoad(name string, path string) (info.LoadStats,
 	}
 
 	cfd, err := os.Open(path)
+	defer cfd.Close()
 	if err != nil {
 		return info.LoadStats{}, fmt.Errorf("failed to open cgroup path %s: %q", path, err)
 	}
-- 
2.7.4

